#include <jni.h>
#include <android/log.h>
#include "sqlite3.h"

#include "ru_yarmap_android_sqlite.h"
/*
jfieldID offset_sqliteHandle;

void readOffset(JNIEnv* env) {
	jclass class  = (*env)->FindClass(env, "ru/yarmap/android/sqlite/SQLiteDatabase");

	offset_sqliteHandle = (*env)->GetFieldID(env, class, "sqliteHandler", "I");
}
*/

void Java_ru_yarmap_android_sqlite_SQLiteDatabase_closedb(JNIEnv* env, jobject object, int sqliteHandle) {
	sqlite3* handle = (sqlite3*) sqliteHandle;

	int err = sqlite3_close(handle);

	if (SQLITE_OK != err) {
		throw_sqlite3_exception(env, handle, err);
	}
}

int Java_ru_yarmap_android_sqlite_SQLiteDatabase_opendb(JNIEnv* env, jobject object, jstring fileName) {
    char const * fileNameStr = (*env)->GetStringUTFChars(env, fileName, 0);

    sqlite3 * handle = 0;

    int err = sqlite3_open_v2(fileNameStr, &handle, SQLITE_OPEN_READWRITE | SQLITE_OPEN_PRIVATECACHE, 0);
    if (SQLITE_OK != err) {
    	//(*env)->SetIntField(env, object, offset_sqliteHandle, (int) handle);
    	throw_sqlite3_exception(env, handle, err);
    }

    if (fileNameStr != 0) (*env)->ReleaseStringUTFChars(env, fileName, fileNameStr);

    return (int)handle;
}
